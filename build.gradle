plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.6'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'jacoco'
	id "org.sonarqube" version "3.5.0.2730"
}

group = 'com.mushidda'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.modelmapper:modelmapper:3.1.1'
	implementation 'com.stripe:stripe-java:22.4.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

jacoco {
	toolVersion = "0.8.7"
	reportsDirectory = layout.buildDirectory.dir('jacoco')
}

test {
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}

sonarqube {
	properties {
		property "sonar.projectKey", "jshim0209_e-commerce-backend"
		property "sonar.organization", "jshim0209"
		property "sonar.host.url", "https://sonarcloud.io"
		// Sonar Coverage Exclusions excludes your files from the coverage.
		// Change it so your main application file is not included. I added the model folder as an example.
		property "sonar.coverage.exclusions", "**/*Application*, **/model/**, **/configuration/**, **/dto/**, **/utility/**, **/exception/**"
		// Sonar Exclusions makes it so your files don't exist at all to SonarQube. It's great for models as you will get a "Implement DTO or Simple POJO" error if you don't.
		// I added model folder for example sake.
		property "sonar.exclusions", "**/model/**, **/configuration/**, **/dto/**, **/utility/**, **/exception/**"
	}
}

jar {
	manifest {
		attributes 'Main-Class': 'com.jiwon.main.EcommerceSpringBootApplication'
	}

	from {
		(configurations.runtimeClasspath).collect {
			it.isDirectory() ? it : zipTree(it)
		}
	}

	duplicatesStrategy 'exclude'
}